{
	"info": {
		"_postman_id": "ee035c49-81dd-43b8-a35e-edb95634cc0b",
		"name": "Failleware",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Requête FIWARE",
			"item": [
				{
					"name": "CONTEXT BROKER",
					"item": [
						{
							"name": "Récupération des entités",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:1026/v2/entities",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "1026",
									"path": [
										"v2",
										"entities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Récupérer les entitées par type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:1026/v2/entities?type=Match",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "1026",
									"path": [
										"v2",
										"entities"
									],
									"query": [
										{
											"key": "type",
											"value": "Match"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "NODEJS",
					"item": [
						{
							"name": "Récupérer toutes les entités d'un type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:5000/api/fiware/:type",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"api",
										"fiware",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Summoner"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Récupérer toutes les entités avec le même id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://172.27.96.148:5000/api/fiware/entities/:id",
									"protocol": "http",
									"host": [
										"172",
										"27",
										"96",
										"148"
									],
									"port": "5000",
									"path": [
										"api",
										"fiware",
										"entities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "x9iBEHZ-Yj3PKq4ahEjXvMwvzN0boDNNg1BPGlrpE2MmMfU"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Récupérer tous les attributs des entités avec le même id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:5000/api/fiware/entities/:id/attrs",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"api",
										"fiware",
										"entities",
										":id",
										"attrs"
									],
									"variable": [
										{
											"key": "id",
											"value": "x9iBEHZ-Yj3PKq4ahEjXvMwvzN0boDNNg1BPGlrpE2MmMfU"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Récupérer une entité par id et par type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://172.27.96.148:5000/api/fiware/entities/:id?type=:type",
									"protocol": "http",
									"host": [
										"172",
										"27",
										"96",
										"148"
									],
									"port": "5000",
									"path": [
										"api",
										"fiware",
										"entities",
										":id"
									],
									"query": [
										{
											"key": "type",
											"value": ":type"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Récupérer les summoners dont le nom contient summonerName",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://172.27.96.148:5000/api/fiware/summoner/:summonerName",
									"protocol": "http",
									"host": [
										"172",
										"27",
										"96",
										"148"
									],
									"port": "5000",
									"path": [
										"api",
										"fiware",
										"summoner",
										":summonerName"
									],
									"variable": [
										{
											"key": "summonerName",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Requête API",
			"item": [
				{
					"name": "Récupération d'un invocateur par son nom",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/summoner/:summonerName",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"summoner",
								":summonerName"
							],
							"variable": [
								{
									"key": "summonerName",
									"value": "Humble in Dèfeat"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupération de toutes les données league of legend par tier, division, queue, region, page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/leagues/:rank/:queue/:division/:page?region=euw1",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"leagues",
								":rank",
								":queue",
								":division",
								":page"
							],
							"query": [
								{
									"key": "region",
									"value": "euw1"
								}
							],
							"variable": [
								{
									"key": "rank",
									"value": "I"
								},
								{
									"key": "queue",
									"value": "RANKED_SOLO_5x5"
								},
								{
									"key": "division",
									"value": "DIAMOND"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupération d'un rank via summonerID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/rank/:summonerId",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"rank",
								":summonerId"
							],
							"variable": [
								{
									"key": "summonerId",
									"value": "e7ThG7T5_xsB9vBWqOCEqPmJeEoTsiCU83U2sV4SLY5-s1uRvaEpKK4c8w"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupération des challengers par queue et region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/challengers/:queue",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"challengers",
								":queue"
							],
							"variable": [
								{
									"key": "queue",
									"value": "RANKED_SOLO_5x5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupération des grandmasters par queue et region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/grandmasters/:queue",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"grandmasters",
								":queue"
							],
							"variable": [
								{
									"key": "queue",
									"value": "RANKED_SOLO_5x5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récupération des masters par queue et region",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/masters/:queue",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"masters",
								":queue"
							],
							"variable": [
								{
									"key": "queue",
									"value": "RANKED_SOLO_5x5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récuperer la listes des dernières partie d'un joueur pas son puuid",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/matchlist/:puuid",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"matchlist",
								":puuid"
							],
							"variable": [
								{
									"key": "puuid",
									"value": "DEZt6GqI_7GhPtm7wZG2RFLC_EKtoaFuucaEFGUMgGcqQa1FurPUWOtBU1AP-cHXgtkuy4baMqrF7w"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Récuperer une partie par son id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://172.27.96.148:5000/api/riot/match/:matchId",
							"protocol": "http",
							"host": [
								"172",
								"27",
								"96",
								"148"
							],
							"port": "5000",
							"path": [
								"api",
								"riot",
								"match",
								":matchId"
							],
							"variable": [
								{
									"key": "matchId",
									"value": "EUW1_6354607073"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}